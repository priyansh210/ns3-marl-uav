[tool.poetry]
name = "ns-defiance"
version = "0.1.0"
description = "ns3 plugin for Distributed finE-tuning oF machIne-leArNing models for Cellular nEtworks"
authors = []
readme = "README.md"
packages = [{ include = "defiance", from = ".." }]

[tool.poetry.scripts]
find-locations = "defiance.utils.find_location:main"
scenario-helper = "defiance.utils.scenario_helper:main"
run-agent = "defiance.model.agents:__main__"

[tool.ruff]
target-version = "py310"
line-length = 120
respect-gitignore = false
extend-include = ["*.ipynb"]
extend-exclude = ["doc/*.py"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",
    "E501", # line-too-long: only use the soft limit by the formatter
    "FIX004", # hacks should be possible
    "ISC001", "COM812", # incompatible with formatter
    "ANN101", "ANN102", "ANN401",
    "N999",
]

[tool.ruff.lint.per-file-ignores]
"test/**.py" = ["S101"]  # use pytest style asserts
"utils/scenario_helper.py" = ["ALL"]
"utils/find_location.py" = ["ALL"]
"examples/topology-creation/create_tracefiles.py" = ["ALL"]
"examples/sumo-test/generate_trace.py" = ["ALL"]
"examples/sumo-test/create_network.py" = ["ALL"]

[tool.mypy]
python_version = "3.10"
follow_imports = "normal"
disallow_untyped_calls = false
files = "."
exclude = ['doc/.*\.py']

[[tool.mypy.overrides]]
module = ["traceExporter", "osmGet", "osmBuild", "randomTrips", "sumolib", "libsumo", "geopy", "ns3ai_gym_env.*", "geopandas", "osmnx"]
ignore_missing_imports = true


[tool.poetry.dependencies]
python = "^3.10,<3.12"

# rl tools
ray = { extras = ["tune"], version = "^2.9.3" }
tensorflow = "~2.15.0"
dm-tree = "^0.1.8"
pandas = "^2.2.1"
pyarrow = "^15.0.1"
scipy = "^1.12.0"
pillow = "^10.2.0"
lz4 = "^4.3.3"
opencv-python = "^4.9.0.80"

# ns3-ai
cppyy = "*"
protobuf = "==3.20.3"
geopy = "^2.4.1"

# sumo
osmnx = "^1.9.1"
sumolib = "^1.19.0"
libsumo = "^1.19.0"
rtree = "^1.2.0"

matplotlib = "^3.8.3"

# backend
distro = "^1.9.0"
wandb = "^0.19.6"

[tool.poetry.group.local.dependencies]
ns3ai-python-utils = { path = "../ai/python_utils", develop = true }
ns3ai-gym-env = { path = "../ai/model/gym-interface/py", develop = true }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.2"
mypy = "^1.10.0"

# typing stubs
pandas-stubs = "*"
types-Pillow = "*"
types-PyYAML = "*"
types-colorama = "*"
types-protobuf = "*"
types-psutil = "*"
types-requests = "*"
types-setuptools = "*"
types-tqdm = "*"
types-defusedxml = "*"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.ipynb]
optional = true

[tool.poetry.group.ipynb.dependencies]
notebook = "^7.1.3"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
